{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(source:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(mkdir:*)",
      "Bash(tree:*)",
      "Bash(ruff:*)",
      "Bash(touch:*)",
      "Bash(cat:*)",
      "Bash(ruff check:*)",
      "Bash(pytest:*)",
      "Bash(python:*)",
      "Bash(python -m pytest:*)",
      "Bash(python3 -m pytest:*)",
      "Bash(cargo:*)",
      "Bash(git:*)",
      "Bash(just:*)",
      "WebFetch(domain:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__browser",
      "Bash(just preflight)",
      "Bash(timeout:*)",
      "Bash(true)",
      "Bash(timeout 15s cargo run)",
      "Bash(rg:*)",
      "WebFetch(domain:sotrh.github.io)",
      "WebFetch(domain:docs.rs)",
      "Bash(timeout 10 cargo run:*)",
      "Bash(timeout 15 cargo run --release)",
      "WebFetch(domain:www.polymonster.co.uk)",
      "WebFetch(domain:github.com)",
      "Bash(rm:*)",
      "WebFetch(domain:*.*)",
      "Bash(*:*)",
      "WebFetch(domain:learnopengl.com)",
      "WebFetch(domain:tokio.rs)",
      "WebFetch(domain:blog.logrocket.com)",
      "WebFetch(domain:www.shuttle.dev)",
      "Bash(RUST_LOG=\"error\" timeout 3s cargo run -p game --quiet)",
      "Bash(RUST_LOG=\"info\" timeout 3s cargo run -p game)",
      "Bash(RUST_LOG=debug cargo run --bin game)",
      "Bash(pkill:*)",
      "Bash(RUST_LOG=debug cargo run -p game)",
      "WebFetch(domain:tchayen.com)",
      "Bash(RUST_LOG=debug timeout 10s cargo run --bin game)",
      "Bash(RUST_LOG=debug timeout 5s cargo run --bin game)",
      "Bash(RUST_LOG=info timeout 5s cargo run --bin game)",
      "WebFetch(domain:whoisryosuke.com)",
      "Bash(for:*)",
      "Bash(do echo -n \"$file: \")",
      "Bash(if [ -z \"$(tail -c 1 \"$file\")\" ])",
      "Bash(then echo \"has newline\")",
      "Bash(else echo \"needs newline\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(tail:*)",
      "Bash(test:*)",
      "WebFetch(domain:doc.rust-lang.org)",
      "WebFetch(domain:crates.io)",
      "Bash(chmod:*)",
      "Bash(./test_editor.sh)",
      "Bash(./test_editor_longer.sh:*)",
      "mcp__windows-ssh-mcp__exec",
      "Bash(RUST_LOG=debug,wgpu_core=warn,wgpu_hal=warn cargo run --features editor)",
      "Bash(rustc:*)",
      "Bash(rustfmt:*)",
      "Bash(echo:*)",
      "Bash(RUST_LOG=info,engine=debug,editor=debug cargo run --features editor,viewport)",
      "Bash(WGPU_BACKEND=vulkan cargo run --features editor,viewport)",
      "Bash(curl:*)",
      "Bash(RUST_LOG=editor=debug cargo run)",
      "Bash(/dev/null)",
      "Bash(RUST_LOG=editor::test_viewport_fork=info cargo run)",
      "Bash(RUST_LOG=info cargo run --bin game)",
      "Bash(RUST_LOG=info,editor=debug cargo run)",
      "Bash(WINIT_UNIX_BACKEND=x11 RUST_LOG=info,editor=debug cargo run)",
      "Bash(cmd.exe /c \"cargo run --release\")",
      "Bash(*)",
      "Bash(cmd.exe /c \"set RUST_LOG=info,editor=debug && cargo run --release\")",
      "Bash(./target/debug/game)",
      "Bash(rustup target:*)",
      "Bash(RUST_LOG=debug cargo run --features editor)",
      "Bash(sed:*)",
      "WebFetch(domain:taintedcoders.com)",
      "WebFetch(domain:rhai.rs)",
      "Bash(RUST_BACKTRACE=1 cargo test --test script_integration test_script_loading_and_execution)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "browser",
    "sequential-thinking",
    "windows-ssh-mcp"
  ]
}